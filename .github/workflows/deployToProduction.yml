# This is a basic workflow to help you get started with Actions

name: Deploy To Production

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch to deploy from (default: master)'
        required: false
        default: 'master'
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production
    concurrency: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.source_branch || 'master' }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run Production Build
        run: npm run production

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: LLL
          utcOffset: "+02:00"

      - name: Setup Git for deploy branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and push to deploy branch
        run: |
          # Create or reset deploy branch to current state
          git checkout -B deploy

          # Add all built assets
          git add -f public/

          # Commit with timestamp
          git commit -m "Build assets from ${{ github.event.inputs.source_branch || 'master' }} at ${{ steps.current-time.outputs.formattedTime }}" --allow-empty

          # Force push to deploy branch
          git push -f origin deploy

          echo "MESSAGE=Build assets from ${{ github.event.inputs.source_branch || 'master' }} at ${{ steps.current-time.outputs.formattedTime }}" >> $GITHUB_ENV

  deploy:
      needs: build
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      environment: production
      concurrency: production
      steps:
      - name: Deploy to Server using SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e  # Exit on any error

            cd ~/public_html
            # activate maintenance mode
            echo "Activating maintenance mode..."
            php artisan down --retry=60

            # update source code
            echo "Fetching updates..."
            git fetch origin
            git reset --hard origin/deploy

            # update PHP dependencies
            echo "Installing Composer dependencies..."
            export COMPOSER_HOME="$HOME/.config/composer"
            composer2 install --no-interaction --prefer-dist --optimize-autoloader --no-dev

            # Clear and refresh caches
            echo "Refreshing caches..."
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # update database
            echo "Running database migrations..."
            php artisan migrate --force

            # restart queues
            echo "Restarting queues..."
            php artisan -v queue:restart
            echo "Queue restarted"

            # stop maintenance mode
            echo "Deactivating maintenance mode..."
            php artisan up

            echo "Deployment completed successfully!"
